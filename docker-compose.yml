services:
  mongodb:
    image: "mongo:6.0.6"
    container_name: lms_mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: librarymgmtsystem
    volumes:
      - mongodb_data:/data/db
      - ./mongoDatabase:/docker-entrypoint-initdb.d:ro
    networks:
      - lms_network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: lms_backend
    restart: unless-stopped
    ports:
      - "5050:5050"
    environment:
      NODE_ENV: production
      CONNECTION_URL: mongodb://mongodb:27017/librarymgmtsystem
      CONNECTION_PORT: 5050
      JWT_SECRET: "n?s!6m=F$$Kg%AgTJ-gN5)Hn~YtllC.AT"
      JWT_REFRESH_SECRET: "&h+D?fhvq$$cC6WoR"
      JWT_LIFE: 30m
      JWT_REFRESH_LIFE: 365d
    volumes:
      - backend_uploads:/app/uploads
      - backend_logs:/app/logs
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - lms_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5050/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: lms_frontend
    restart: unless-stopped
    ports:
      - "5173:5173"
    environment:
      NODE_ENV: production
      VITE_BACKEND_URL: http://localhost:5050
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - lms_network

volumes:
  mongodb_data:
    driver: local
  backend_uploads:
    driver: local
  backend_logs:
    driver: local

networks:
  lms_network:
    driver: bridge
